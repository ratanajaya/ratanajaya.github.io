{"version":3,"file":"static/js/312.ca456040.chunk.js","mappings":"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","sources":["common/api/apiMaster.ts","common/api/apiTransaction.ts","pages/TrackMood/index.tsx","pages/_layouts/PageBase.tsx"],"sourcesContent":["import { WishCrudModel, ResponseResult, Response } from 'common/types';\r\nimport { instanceWithBearer as axios } from \"common/axios\";\r\n\r\nconst apiMaster = {\r\n  getWish: (params: { id: string }) => \r\n    axios.get<WishCrudModel>('Master/GetWish', { params }),\r\n  getWishes: () =>\r\n    axios.get<WishCrudModel[]>('Master/GetWishes'),\r\n  insertWish: (param: WishCrudModel) => \r\n    axios.post<ResponseResult<WishCrudModel>>('Master/InsertWish', param),\r\n  updateWish: (param: WishCrudModel) => \r\n    axios.post<ResponseResult<WishCrudModel>>('Master/UpdateWish', param),\r\n  deleteWish: (params: { id: string }) => \r\n    axios.delete<Response>('Master/DeleteWish', { params }),\r\n};\r\n\r\nexport default apiMaster;","import { DailyWish, DailyWishInsertModel, ResponseResult } from 'common/types';\r\nimport { instanceWithBearer as axios } from \"common/axios\";\r\n\r\nconst apiTransaction = {\r\n  getDailyWishesByDate: (params: { date: string | null }) => \r\n    axios.get<DailyWish[]>('Transaction/GetDailyWishesByDate', { params }),\r\n  insertDailyWish: (param: DailyWishInsertModel) => \r\n    axios.post<ResponseResult<DailyWish>>('Transaction/InsertDailyWish', param),\r\n};\r\n\r\nexport default apiTransaction;","import { Button, Card, CardContent, Slider, Typography } from '@mui/material';\r\nimport apiMaster from 'common/api/apiMaster';\r\nimport apiTransaction from 'common/api/apiTransaction';\r\nimport appConst from 'common/appConst';\r\nimport { DailyWish, DailyWishInsertModel, WishCrudModel, SubWishOption } from 'common/types';\r\nimport util from 'common/util';\r\nimport PageBase from 'pages/_layouts/PageBase';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default function TrackMood() {\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [dailyWishInserts, setDailyWishInserts] = useState<DailyWishInsertModel[]>([]);\r\n  const [pkDate, setPkDate] = useState<string>(new Date().toISOString());\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n\r\n    apiMaster.getWishes()\r\n      .then(res1 => {\r\n        apiTransaction.getDailyWishesByDate({ date: null })\r\n          .then(res2 => {\r\n            const activeWishes = res1.filter(wish => wish.entityState === appConst.entityState.active);\r\n\r\n            const newDailyWishInserts = activeWishes.map(wish => {\r\n              const woSorted = wish.wishOptions.sort((a, b) => a.value - b.value);\r\n\r\n              const middleIndex = Math.floor(woSorted.length / 2);\r\n              const medianVal = woSorted.length % 2 !== 0 ? \r\n                woSorted[middleIndex].value : \r\n                (woSorted[middleIndex - 1].value + woSorted[middleIndex].value) / 2;\r\n              const medianId = woSorted.find(wo => wo.value === medianVal)?.id!;\r\n\r\n              const dailyWish = res2.find(dw => dw.wishId === wish.id);\r\n\r\n              const newDwi: DailyWishInsertModel = {\r\n                locked: dailyWish != null,\r\n                wish: wish,\r\n\r\n                pkDate: pkDate,\r\n                wishId: wish.id!,\r\n                optionId: dailyWish?.selectedOptionId ?? medianId,\r\n                remark: null,\r\n                subWishOptions: wish.subWishes\r\n                  .filter(subWish => subWish.entityState === appConst.entityState.active)\r\n                  .map(subWish => {\r\n                    const dailySubWish = dailyWish?.dailySubWishes.find(dsw => dsw.subWishId === subWish.id);\r\n\r\n                    return ({\r\n                      subWish: subWish,\r\n\r\n                      subWishId: subWish.id!,\r\n                      optionId: dailySubWish?.selectedOption?.id ?? medianId,\r\n                      remark: null,\r\n                    });\r\n                  }),\r\n              }\r\n\r\n              return newDwi;\r\n            });\r\n\r\n            setDailyWishInserts(newDailyWishInserts);\r\n          })\r\n          .catch(() => {})\r\n          .finally(() => setLoading(false));\r\n      })\r\n      .catch(() => setLoading(false))\r\n      .finally(() => {});\r\n  },[]);\r\n\r\n  function handleSave(wishId: string, index: number){\r\n    const param = dailyWishInserts.find(dwi => dwi.wishId === wishId)!;\r\n\r\n    setLoading(true);\r\n    apiTransaction.insertDailyWish(param)\r\n      .then(res => {\r\n        if(res.success){\r\n          setDailyWishInserts(prev => {\r\n            const changedIndex = prev.findIndex(dwi => dwi.wishId === wishId);\r\n            prev[changedIndex].locked = true;\r\n\r\n            return [...prev];\r\n          });\r\n\r\n          toast.success('Saved!', { autoClose: 500 });\r\n          scrollToNext(index);\r\n        }\r\n        else{\r\n          toast.error(res.message);\r\n        }\r\n      })\r\n      .catch(() => {})\r\n      .finally(() => setLoading(false));\r\n  }\r\n  \r\n  const itemRefs = useRef<Array<HTMLDivElement | null>>([]);\r\n\r\n  function scrollToNext(currIndex : number) {\r\n    if(currIndex === itemRefs.current.length - 1) {\r\n      window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    }\r\n\r\n    const topOffset = itemRefs.current[currIndex + 1]!.offsetTop;\r\n    window.scrollTo({ top: window.pageYOffset + topOffset - 120, behavior: 'smooth' });\r\n  }\r\n\r\n  const headerState = dailyWishInserts.length === 0\r\n    ? 'nothing'\r\n    : dailyWishInserts.length > 0 && dailyWishInserts.length > 0 && dailyWishInserts.every(dwi => dwi.locked)\r\n    ? 'finished'\r\n    : 'normal';\r\n  \r\n  return (\r\n    <PageBase title='Track Mood' loading={loading}>\r\n      {headerState === 'nothing'\r\n        ? <>\r\n            <Typography variant='body1'>There's nothing here <a href='/Wishes/Create' onClick={e => {\r\n              e.preventDefault();\r\n              history.push('/Wishes/Create');\r\n            }}>create a new wish</a> to start using this app</Typography>\r\n          </>\r\n        : headerState === 'normal'\r\n        ? <Typography variant='body1'>Today is {`${util.formatFriendlyDate(pkDate)}`}! How do you feel of your wishes?</Typography>\r\n        : <>\r\n            <Typography variant='body1'>🎉You have rated all of your wishes today!🎉</Typography>\r\n            <div className='divider-4'></div>\r\n            <Typography variant='body1'>🎉Come back again tomorrow!🎉</Typography>\r\n            <div className='divider-8'></div>\r\n          </>\r\n      }\r\n      {dailyWishInserts.map((dwi, index) => {\r\n          const wish = dwi.wish;\r\n\r\n          const sliderMarks = wish.wishOptions\r\n            .sort((woa, wob) => woa.value - wob.value)\r\n            .map(wo => ({\r\n              value: wo.value,\r\n              label: wo.value\r\n            }));\r\n\r\n          const sliderMarksSw = sliderMarks.map(sm => ({\r\n            value: sm.value,\r\n          }));\r\n\r\n          const minVal = wish.wishOptions.reduce((min, wo) => {\r\n            return wo.value < min ? wo.value : min;\r\n          }, 0);\r\n\r\n          const maxVal = wish.wishOptions.reduce((max, wo) => {\r\n            return wo.value > max ? wo.value : max;\r\n          }, 0);\r\n          \r\n          const dailyWishOptionValue = wish.wishOptions.find(wo => wo.id === dwi.optionId)?.value ?? 0;\r\n\r\n          return(\r\n            <Card key={wish.id} \r\n              sx={{ width:'100%', marginBottom:'12px' }}\r\n              ref={el => itemRefs.current[index] = el} \r\n            >\r\n              <CardContent>\r\n                <Typography variant='h6'>{wish.name}</Typography>\r\n                <div style={{padding:'0px 8px'}}>                  \r\n                  <Slider\r\n                    value={dailyWishOptionValue}\r\n                    valueLabelFormat={(val, i) =>{\r\n                      const wishOption = wish.wishOptions.find(wo => wo.value === val);\r\n                      return wishOption ? wishOption.name : '';\r\n                    }}\r\n                    step={null}\r\n                    valueLabelDisplay=\"auto\"\r\n                    min={minVal}\r\n                    max={maxVal}\r\n                    marks={sliderMarks}\r\n                    sx={{ marginLeft:'8px'}}\r\n                    disabled={dwi.locked}\r\n\r\n                    onChange={(e, val) => {\r\n                      setDailyWishInserts(prev => {\r\n                        const optionId = wish.wishOptions.find(wo => wo.value === val)?.id!;\r\n\r\n                        const changedIndex = prev.findIndex(dwi => dwi.wishId === wish.id);\r\n                        prev[changedIndex].optionId = optionId;\r\n\r\n                        return [...prev];\r\n                      })\r\n                    }}\r\n                  />\r\n                  {dwi.subWishOptions.map(subWish =>{\r\n                    const dailySubwishOptionValue = wish.wishOptions.find(wo => wo.id === subWish.optionId)?.value ?? 0;\r\n\r\n                    return(\r\n                      <div key={subWish.subWishId}>\r\n                        <Typography variant='subtitle1'>{subWish.subWish.name}</Typography>\r\n                        <Slider \r\n                          value={dailySubwishOptionValue}\r\n                          valueLabelFormat={(val, i) =>{\r\n                            const wishOption = wish.wishOptions.find(wo => wo.value === val);\r\n                            return wishOption ? wishOption.name : '';\r\n                          }}\r\n                          step={null}\r\n                          valueLabelDisplay=\"auto\"\r\n                          min={minVal}\r\n                          max={maxVal}\r\n                          marks={sliderMarksSw}\r\n                          sx={{ marginLeft:'8px'}}\r\n                          disabled={dwi.locked}\r\n\r\n                          onChange={(e, val) => {\r\n                            setDailyWishInserts(prev => {\r\n                              const optionId = wish.wishOptions.find(wo => wo.value === val)?.id!;\r\n\r\n                              const changedIndex = prev.findIndex(dwi => dwi.wishId === wish.id);\r\n                              const changedSubIndex = prev[changedIndex].subWishOptions.findIndex(swo => swo.subWishId === subWish.subWishId);\r\n                              prev[changedIndex].subWishOptions[changedSubIndex].optionId = optionId;\r\n\r\n                              return [...prev];\r\n                            });\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n                {!dwi.locked && (<>\r\n                    <div className='divider-8' />\r\n                    <div style={{textAlign:'right', marginTop:'8px'}}>\r\n                      <Button variant='outlined' color='primary' disabled={dwi.locked}\r\n                        onClick={() => handleSave(dwi.wishId, index)}\r\n                      >\r\n                        Save\r\n                      </Button>\r\n                    </div>\r\n                  </>)\r\n                }\r\n                \r\n              </CardContent>\r\n            </Card>\r\n          );\r\n        }\r\n      )}\r\n    </PageBase>\r\n  )\r\n}\r\n","import { Container, Typography } from '@mui/material'\r\nimport React from 'react'\r\nimport SpinBackdrop from 'components/SpinBackdrop'\r\n\r\nexport default function PageBase(props: {\r\n  loading: boolean,\r\n  title: string,\r\n  children: React.ReactNode\r\n}) {\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <div className='divider-64'></div>\r\n        <div className='divider-12'></div>\r\n        <Typography variant='h6'>{props.title}</Typography>\r\n        <div className='divider-12'></div>\r\n        {props.children}\r\n      </Container>\r\n      <SpinBackdrop open={props.loading} />\r\n    </div>\r\n  )\r\n}\r\n"],"names":["apiMaster","getWish","params","axios","getWishes","insertWish","param","updateWish","deleteWish","getDailyWishesByDate","insertDailyWish","TrackMood","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","dailyWishInserts","setDailyWishInserts","_useState5","Date","toISOString","_useState6","pkDate","history","useHistory","handleSave","wishId","index","find","dwi","apiTransaction","then","res","success","prev","changedIndex","findIndex","locked","_toConsumableArray","toast","autoClose","currIndex","itemRefs","current","length","window","scrollTo","top","behavior","topOffset","offsetTop","pageYOffset","scrollToNext","message","catch","finally","useEffect","res1","date","res2","newDailyWishInserts","filter","wish","entityState","appConst","map","_woSorted$find","_dailyWish$selectedOp","woSorted","wishOptions","sort","a","b","value","middleIndex","Math","floor","medianVal","medianId","wo","id","dailyWish","dw","optionId","selectedOptionId","remark","subWishOptions","subWishes","subWish","_dailySubWish$selecte","_dailySubWish$selecte2","dailySubWish","dailySubWishes","dsw","subWishId","selectedOption","useRef","headerState","every","_jsxs","PageBase","title","children","_jsx","_Fragment","Typography","variant","href","onClick","e","preventDefault","push","concat","util","className","_wish$wishOptions$fin","_wish$wishOptions$fin2","sliderMarks","woa","wob","label","sliderMarksSw","sm","minVal","reduce","min","maxVal","max","dailyWishOptionValue","Card","sx","width","marginBottom","ref","el","CardContent","name","style","padding","Slider","valueLabelFormat","val","i","wishOption","step","valueLabelDisplay","marks","marginLeft","disabled","onChange","_wish$wishOptions$fin3","_wish$wishOptions$fin4","_wish$wishOptions$fin5","dailySubwishOptionValue","_wish$wishOptions$fin6","changedSubIndex","swo","textAlign","marginTop","Button","color","props","Container","SpinBackdrop","open"],"sourceRoot":""}