{"version":3,"file":"static/js/180.22ab02eb.chunk.js","mappings":"mHAGMA,EAAiB,CACrBC,qBAAsB,SAACC,GAA+B,OACpDC,EAAAA,EAAAA,IAAuB,mCAAoC,CAAED,OAAAA,GAAS,EACxEE,gBAAiB,SAACC,GAA2B,OAC3CF,EAAAA,EAAAA,KAAsC,8BAA+BE,EAAM,EAC7EC,sBAAuB,kBACrBH,EAAAA,EAAAA,IAA8B,oCAAoC,GAGtE,K,wHCPe,SAASI,IACtB,IAAAC,GAA8BC,EAAAA,EAAAA,WAAkB,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/CI,EAAOF,EAAA,GAEdG,GAF0BH,EAAA,IAEQD,EAAAA,EAAAA,UAA6B,KAAGK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAA3DE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAW9B,OATAG,EAAAA,EAAAA,YAAU,WACRjB,EAAAA,EAAAA,wBACGkB,MAAK,SAAAC,GACJH,EAAaG,GACbC,QAAQC,IAAI,UAAWF,EACzB,IACCG,OAAM,WAAO,GAClB,GAAE,KAGAC,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CAACC,MAAM,UAAUb,QAASA,EAAQc,SACxCX,EAAUY,KAAI,SAAAC,GAAE,OACfC,EAAAA,EAAAA,MAAA,OAAAH,SAAA,EACEH,EAAAA,EAAAA,KAAA,OAAAG,SAAME,EAAGE,OACRF,EAAGG,eAAeJ,KAAI,SAAAK,GAAG,OACxBT,EAAAA,EAAAA,KAAA,OAAAG,UACEH,EAAAA,EAAAA,KAAA,OAAAG,SAAMM,EAAIF,QACN,MAEJ,KAId,C,2GC7Be,SAASN,EAASS,GAK/B,OACEJ,EAAAA,EAAAA,MAAA,OAAAH,SAAA,EACEG,EAAAA,EAAAA,MAACK,EAAAA,EAAS,CAAAR,SAAA,EACRH,EAAAA,EAAAA,KAAA,OAAKY,UAAU,gBACfZ,EAAAA,EAAAA,KAAA,OAAKY,UAAU,gBACfZ,EAAAA,EAAAA,KAACa,EAAAA,EAAU,CAACC,QAAQ,KAAIX,SAAEO,EAAMR,SAChCF,EAAAA,EAAAA,KAAA,OAAKY,UAAU,eACdF,EAAMP,aAETH,EAAAA,EAAAA,KAACe,EAAAA,EAAY,CAACC,KAAMN,EAAMrB,YAGhC,C","sources":["common/api/apiTransaction.ts","pages/Summary/index.tsx","pages/_layouts/PageBase.tsx"],"sourcesContent":["import { DailyWish, DailyWishInsertModel, DailyWishSummary, ResponseResult } from 'common/types';\r\nimport { instanceWithBearer as axios } from \"common/axios\";\r\n\r\nconst apiTransaction = {\r\n  getDailyWishesByDate: (params: { date: string | null }) => \r\n    axios.get<DailyWish[]>('Transaction/GetDailyWishesByDate', { params }),\r\n  insertDailyWish: (param: DailyWishInsertModel) => \r\n    axios.post<ResponseResult<DailyWish>>('Transaction/InsertDailyWish', param),\r\n  getDailyWishSummaries: () => \r\n    axios.get<DailyWishSummary[]>('Transaction/GetDailyWishSummaries')\r\n};\r\n\r\nexport default apiTransaction;","import apiTransaction from 'common/api/apiTransaction';\r\nimport { DailyWishSummary } from 'common/types';\r\nimport PageBase from 'pages/_layouts/PageBase'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nexport default function Summary() {\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n\r\n  const [summaries, setSummaries] = useState<DailyWishSummary[]>([]);\r\n\r\n  useEffect(() => {\r\n    apiTransaction.getDailyWishSummaries()\r\n      .then(res => {\r\n        setSummaries(res);\r\n        console.log('res is ', res);\r\n      })\r\n      .catch(() => {});\r\n  },[]);\r\n  \r\n  return (\r\n    <PageBase title='Summary' loading={loading}>\r\n      {summaries.map(dw => (\r\n        <div>\r\n          <div>{dw.name}</div>\r\n          {dw.dailySubWishes.map(dsw => (\r\n            <div>\r\n              <div>{dsw.name}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </PageBase>\r\n  )\r\n}\r\n","import { Container, Typography } from '@mui/material'\r\nimport React from 'react'\r\nimport SpinBackdrop from 'components/SpinBackdrop'\r\n\r\nexport default function PageBase(props: {\r\n  loading: boolean,\r\n  title: string,\r\n  children: React.ReactNode\r\n}) {\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <div className='divider-64'></div>\r\n        <div className='divider-12'></div>\r\n        <Typography variant='h6'>{props.title}</Typography>\r\n        <div className='divider-12'></div>\r\n        {props.children}\r\n      </Container>\r\n      <SpinBackdrop open={props.loading} />\r\n    </div>\r\n  )\r\n}\r\n"],"names":["apiTransaction","getDailyWishesByDate","params","axios","insertDailyWish","param","getDailyWishSummaries","Summary","_useState","useState","_useState2","_slicedToArray","loading","_useState3","_useState4","summaries","setSummaries","useEffect","then","res","console","log","catch","_jsx","PageBase","title","children","map","dw","_jsxs","name","dailySubWishes","dsw","props","Container","className","Typography","variant","SpinBackdrop","open"],"sourceRoot":""}